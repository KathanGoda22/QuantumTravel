{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null); // Reset error state on each call\n\n      try {\n        const res = await fetch(url);\n        console.log(`Response from ${url}:`, res.status, res.statusText); // Log the status for debugging\n\n        if (!res.ok) {\n          throw new Error(`Network response was not ok: ${res.status} ${res.statusText}`);\n        }\n        const result = await res.json();\n        setData(result.data);\n      } catch (err) {\n        setError(err.message || \"Failed to fetch data\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]); // Dependency array\n\n  return {\n    data,\n    error,\n    loading\n  };\n};\n_s(useFetch, \"6nhoqVvctpRRYiww7uwVz/g7/BM=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","error","setError","loading","setLoading","fetchData","res","fetch","console","log","status","statusText","ok","Error","result","json","err","message"],"sources":["E:/Quantum Travel Website/tour-management/frontend/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError(null); // Reset error state on each call\r\n\r\n      try {\r\n        const res = await fetch(url);\r\n        console.log(`Response from ${url}:`, res.status, res.statusText); // Log the status for debugging\r\n\r\n        if (!res.ok) {\r\n          throw new Error(`Network response was not ok: ${res.status} ${res.statusText}`);\r\n        }\r\n        const result = await res.json();\r\n        setData(result.data);\r\n      } catch (err) {\r\n        setError(err.message || \"Failed to fetch data\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]); // Dependency array\r\n\r\n  return {\r\n    data,\r\n    error,\r\n    loading,\r\n  };\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,YAAY;MAC5BD,UAAU,CAAC,IAAI,CAAC;MAChBF,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEhB,IAAI;QACF,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAG,CAAC;QAC5BU,OAAO,CAACC,GAAG,CAAE,iBAAgBX,GAAI,GAAE,EAAEQ,GAAG,CAACI,MAAM,EAAEJ,GAAG,CAACK,UAAU,CAAC,CAAC,CAAC;;QAElE,IAAI,CAACL,GAAG,CAACM,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAAE,gCAA+BP,GAAG,CAACI,MAAO,IAAGJ,GAAG,CAACK,UAAW,EAAC,CAAC;QACjF;QACA,MAAMG,MAAM,GAAG,MAAMR,GAAG,CAACS,IAAI,EAAE;QAC/Bf,OAAO,CAACc,MAAM,CAACf,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOiB,GAAG,EAAE;QACZd,QAAQ,CAACc,GAAG,CAACC,OAAO,IAAI,sBAAsB,CAAC;MACjD,CAAC,SAAS;QACRb,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,SAAS,EAAE;EACb,CAAC,EAAE,CAACP,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEX,OAAO;IACLC,IAAI;IACJE,KAAK;IACLE;EACF,CAAC;AACH,CAAC;AAAC,GAlCIN,QAAQ;AAoCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}