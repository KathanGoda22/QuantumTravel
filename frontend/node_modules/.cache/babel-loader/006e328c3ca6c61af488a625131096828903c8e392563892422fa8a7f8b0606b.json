{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kathan Goda\\\\Documents\\\\MernStack-Tour-Management-main\\\\tour-management\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initial_state = {\n  user: localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null,\n  loading: false,\n  error: null\n};\n\n// Lazy loading mechanism\nuseEffect(() => {\n  const fetchUserData = async () => {\n    try {\n      const userData = localStorage.getItem(\"user\");\n      if (userData) {\n        dispatch({\n          type: \"LOGIN_SUCCESS\",\n          payload: JSON.parse(userData)\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: \"LOGIN_FAILURE\",\n        payload: error.message\n      });\n    } finally {\n      // Set loading to false after fetching user data\n      dispatch({\n        type: \"LOADING_COMPLETE\"\n      });\n    }\n  };\n  fetchUserData();\n}, []); // Empty dependency array ensures this effect runs only once\n\nexport const AuthContext = /*#__PURE__*/createContext(initial_state);\nconst AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        loading: true,\n        error: null\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        loading: false,\n        error: null\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        loading: false,\n        error: action.payload\n      };\n    case \"REGISTER_SUCCESS\":\n      return {\n        user: null,\n        loading: false,\n        error: null\n      };\n    case \"LOGOUT\":\n      localStorage.removeItem(\"user\");\n      return {\n        user: null,\n        loading: false,\n        error: null\n      };\n    default:\n      return state;\n  }\n};\n_c = AuthReducer;\nexport const AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(AuthReducer, initial_state);\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      loading: state.loading,\n      error: state.error,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"W9QbWx7Z4rctFsX5T1v7mxZp6Nc=\");\n_c2 = AuthContextProvider;\nvar _c, _c2;\n$RefreshReg$(_c, \"AuthReducer\");\n$RefreshReg$(_c2, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","initial_state","user","localStorage","getItem","JSON","parse","loading","error","fetchUserData","userData","dispatch","type","payload","message","AuthContext","AuthReducer","state","action","removeItem","AuthContextProvider","children","setItem","stringify"],"sources":["C:/Users/Kathan Goda/Documents/MernStack-Tour-Management-main/tour-management/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\r\n\r\nconst initial_state = {\r\n  user:localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n// Lazy loading mechanism\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const userData = localStorage.getItem(\"user\");\r\n        if (userData) {\r\n          dispatch({ type: \"LOGIN_SUCCESS\", payload: JSON.parse(userData) });\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: \"LOGIN_FAILURE\", payload: error.message });\r\n      } finally {\r\n        // Set loading to false after fetching user data\r\n        dispatch({ type: \"LOADING_COMPLETE\" });\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []); // Empty dependency array ensures this effect runs only once\r\n\r\nexport const AuthContext = createContext(initial_state);\r\n\r\nconst AuthReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_START\":\r\n      return {\r\n        user: null,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        user: action.payload,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case \"LOGIN_FAILURE\":\r\n      return {\r\n        user: null,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case \"REGISTER_SUCCESS\":\r\n      return {\r\n        user: null,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    case \"LOGOUT\":\r\n      localStorage.removeItem(\"user\"); \r\n      return {\r\n        user: null,\r\n        loading: false,\r\n        error: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AuthReducer, initial_state);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\r\n  }, [state.user]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}