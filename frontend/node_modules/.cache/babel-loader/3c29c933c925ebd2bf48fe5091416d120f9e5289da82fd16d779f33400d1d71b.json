{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport \"./searchbar.css\";\nimport { useHistory } from 'react-router-dom';\nimport { BASE_URL } from \"../utils/config\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Container, Row, Col, Form, FormGroup, Input, Button } from 'reactstrap';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = () => {\n  _s();\n  const [destination, setDestination] = useState('');\n  const [dates, setDates] = useState('');\n  const [travelers, setTravelers] = useState('');\n  const history = useHistory();\n  const handleSearch = () => {\n    const searchQuery = `?destination=${destination}&dates=${dates}&travelers=${travelers}`;\n    history.push(`/search${searchQuery}`);\n  };\n  const locationRef = useRef(\"\");\n  const durationRef = useRef(0);\n  const maxGroupSizeRef = useRef(0);\n  const navigate = useNavigate();\n  const searchHandler = async () => {\n    const location = locationRef.current.value;\n    const duration = durationRef.current.value;\n    const maxGroupSize = maxGroupSizeRef.current.value;\n    if (location === \"\" || duration === \"\" || maxGroupSize === \"\") {\n      return alert(\"All field are required\");\n    }\n    const res = await fetch(`${BASE_URL}/tours/search/getTourBySearch?city=${location}\n    &duration==${duration}&maxGroupSize=${maxGroupSize}`);\n    if (!res.ok) alert(\"Something went wrong\");\n    const result = await res.json();\n    navigate(`/tours/search?city=${location}\n    &duration==${duration}&maxGroupSize=${maxGroupSize}`, {\n      state: result.Data\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(SearchBar, \"aw1a3SJB7PxwadsKrT/HAtYYOW8=\", false, function () {\n  return [useHistory, useNavigate];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useRef","useHistory","BASE_URL","useNavigate","Container","Row","Col","Form","FormGroup","Input","Button","SearchBar","destination","setDestination","useState","dates","setDates","travelers","setTravelers","history","handleSearch","searchQuery","push","locationRef","durationRef","maxGroupSizeRef","navigate","searchHandler","location","current","value","duration","maxGroupSize","alert","res","fetch","ok","result","json","state","Data"],"sources":["C:/Users/Kathan Goda/Documents/MernStack-Tour-Management-main/tour-management/frontend/src/shared/SearchBar.js"],"sourcesContent":["import React, { useRef } from \"react\";\r\nimport \"./searchbar.css\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { BASE_URL } from \"../utils/config\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Container, Row, Col, Form, FormGroup, Input, Button } from 'reactstrap';\r\n\r\n\r\nconst SearchBar = () => {\r\n\r\n  const [destination, setDestination] = useState('');\r\n  const [dates, setDates] = useState('');\r\n  const [travelers, setTravelers] = useState('');\r\n  const history = useHistory();\r\n\r\n  const handleSearch = () => {\r\n    const searchQuery = `?destination=${destination}&dates=${dates}&travelers=${travelers}`;\r\n    history.push(`/search${searchQuery}`);\r\n  };\r\n\r\n  const locationRef = useRef(\"\");\r\n  const durationRef = useRef(0);\r\n  const maxGroupSizeRef = useRef(0);\r\n  const navigate = useNavigate();\r\n\r\n  const searchHandler = async () => {\r\n    const location = locationRef.current.value;\r\n    const duration = durationRef.current.value;\r\n    const maxGroupSize = maxGroupSizeRef.current.value;\r\n\r\n    if (location === \"\" || duration === \"\" || maxGroupSize === \"\") {\r\n      return alert(\"All field are required\");\r\n    }\r\n\r\n    const res =\r\n      await fetch(`${BASE_URL}/tours/search/getTourBySearch?city=${location}\r\n    &duration==${duration}&maxGroupSize=${maxGroupSize}`);\r\n\r\n    if (!res.ok) alert(\"Something went wrong\");\r\n\r\n    const result = await res.json();\r\n\r\n    navigate(\r\n      `/tours/search?city=${location}\r\n    &duration==${duration}&maxGroupSize=${maxGroupSize}`,\r\n      { state: result.Data }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n          </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,OAAO,iBAAiB;AACxB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,SAAS,EAAEC,KAAK,EAAEC,MAAM,QAAQ,YAAY;AAAC;AAAA;AAGjF,MAAMC,SAAS,GAAG,MAAM;EAAA;EAEtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMK,OAAO,GAAGlB,UAAU,EAAE;EAE5B,MAAMmB,YAAY,GAAG,MAAM;IACzB,MAAMC,WAAW,GAAI,gBAAeT,WAAY,UAASG,KAAM,cAAaE,SAAU,EAAC;IACvFE,OAAO,CAACG,IAAI,CAAE,UAASD,WAAY,EAAC,CAAC;EACvC,CAAC;EAED,MAAME,WAAW,GAAGvB,MAAM,CAAC,EAAE,CAAC;EAC9B,MAAMwB,WAAW,GAAGxB,MAAM,CAAC,CAAC,CAAC;EAC7B,MAAMyB,eAAe,GAAGzB,MAAM,CAAC,CAAC,CAAC;EACjC,MAAM0B,QAAQ,GAAGvB,WAAW,EAAE;EAE9B,MAAMwB,aAAa,GAAG,YAAY;IAChC,MAAMC,QAAQ,GAAGL,WAAW,CAACM,OAAO,CAACC,KAAK;IAC1C,MAAMC,QAAQ,GAAGP,WAAW,CAACK,OAAO,CAACC,KAAK;IAC1C,MAAME,YAAY,GAAGP,eAAe,CAACI,OAAO,CAACC,KAAK;IAElD,IAAIF,QAAQ,KAAK,EAAE,IAAIG,QAAQ,KAAK,EAAE,IAAIC,YAAY,KAAK,EAAE,EAAE;MAC7D,OAAOC,KAAK,CAAC,wBAAwB,CAAC;IACxC;IAEA,MAAMC,GAAG,GACP,MAAMC,KAAK,CAAE,GAAEjC,QAAS,sCAAqC0B,QAAS;AAC5E,iBAAiBG,QAAS,iBAAgBC,YAAa,EAAC,CAAC;IAErD,IAAI,CAACE,GAAG,CAACE,EAAE,EAAEH,KAAK,CAAC,sBAAsB,CAAC;IAE1C,MAAMI,MAAM,GAAG,MAAMH,GAAG,CAACI,IAAI,EAAE;IAE/BZ,QAAQ,CACL,sBAAqBE,QAAS;AACrC,iBAAiBG,QAAS,iBAAgBC,YAAa,EAAC,EAClD;MAAEO,KAAK,EAAEF,MAAM,CAACG;IAAK,CAAC,CACvB;EACH,CAAC;EAED,oBACE,qCACS;AAEb,CAAC;AAAC,GA7CI7B,SAAS;EAAA,QAKGV,UAAU,EAUTE,WAAW;AAAA;AAAA,KAfxBQ,SAAS;AA+Cf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}