{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const res = await fetch(url, {\n          method: \"GET\",\n          credentials: \"include\" // If cookies or authentication tokens are needed\n        });\n\n        if (!res.ok) {\n          const errorData = await res.json(); // Try to get error details\n          throw new Error(errorData.message || \"Failed to fetch\");\n        }\n        const result = await res.json();\n        setData(result.data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    error,\n    loading\n  };\n};\n_s(useFetch, \"6nhoqVvctpRRYiww7uwVz/g7/BM=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","error","setError","loading","setLoading","fetchData","res","fetch","method","credentials","ok","errorData","json","Error","message","result","err"],"sources":["E:/Quantum Travel Website/tour-management/frontend/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const res = await fetch(url, {\r\n          method: \"GET\",\r\n          credentials: \"include\", // If cookies or authentication tokens are needed\r\n        });\r\n\r\n        if (!res.ok) {\r\n          const errorData = await res.json(); // Try to get error details\r\n          throw new Error(errorData.message || \"Failed to fetch\");\r\n        }\r\n        const result = await res.json();\r\n\r\n        setData(result.data);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return {\r\n    data,\r\n    error,\r\n    loading,\r\n  };\r\n};\r\n\r\nexport default useFetch;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EAExB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,YAAY;MAC5BD,UAAU,CAAC,IAAI,CAAC;MAChBF,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACF,MAAMI,GAAG,GAAG,MAAMC,KAAK,CAACT,GAAG,EAAE;UAC3BU,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE,SAAS,CAAE;QAC1B,CAAC,CAAC;;QAEF,IAAI,CAACH,GAAG,CAACI,EAAE,EAAE;UACX,MAAMC,SAAS,GAAG,MAAML,GAAG,CAACM,IAAI,EAAE,CAAC,CAAC;UACpC,MAAM,IAAIC,KAAK,CAACF,SAAS,CAACG,OAAO,IAAI,iBAAiB,CAAC;QACzD;QACA,MAAMC,MAAM,GAAG,MAAMT,GAAG,CAACM,IAAI,EAAE;QAE/BZ,OAAO,CAACe,MAAM,CAAChB,IAAI,CAAC;QACpBK,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZd,QAAQ,CAACc,GAAG,CAACF,OAAO,CAAC;QACrBV,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,SAAS,EAAE;EACb,CAAC,EAAE,CAACP,GAAG,CAAC,CAAC;EAET,OAAO;IACLC,IAAI;IACJE,KAAK;IACLE;EACF,CAAC;AACH,CAAC;AAAC,GAvCIN,QAAQ;AAyCd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}